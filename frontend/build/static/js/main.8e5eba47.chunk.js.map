{"version":3,"sources":["Context/ChatProvider.js","components/Authentication/Login.js","components/Authentication/Signup.js","Pages/Homepage.js","components/SingleChat.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js","components/Authentication/VerificationPage.js","App.js","reportWebVitals.js","index.js"],"names":["ChatContext","createContext","ChatState","useContext","ChatProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","selectedChat","setSelectedChat","_useState3","_useState4","user","setUser","_useState5","_useState6","notification","setNotification","_useState7","_useState8","chats","setChats","history","useHistory","useEffect","userInfo","JSON","parse","localStorage","getItem","push","_jsx","Provider","value","Login","show","setShow","toast","useToast","email","setEmail","password","setPassword","loading","setLoading","submitHandler","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_yield$axios$post","data","wrap","_context","prev","next","title","status","duration","isClosable","position","abrupt","headers","axios","post","sent","setItem","stringify","t0","description","response","message","stop","apply","arguments","_jsxs","VStack","spacing","FormControl","id","isRequired","FormLabel","Input","type","placeholder","onChange","e","target","InputGroup","size","InputRightElement","width","Button","h","onClick","colorScheme","style","marginTop","isLoading","variant","Signup","handleClick","name","setName","confirmpassword","setConfirmpassword","_useState9","_useState10","_useState11","_useState12","pic","setPic","_useState13","_useState14","picLoading","setPicLoading","includes","console","log","concat","_id","p","accept","pics","undefined","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","Homepage","socket","selectedChatCompare","Container","maxW","centerContent","Box","d","justifyContent","bg","w","m","borderRadius","borderWidth","Text","fontSize","fontFamily","Tabs","isFitted","TabList","mb","Tab","TabPanels","TabPanel","isSameSenderMargin","messages","i","userId","length","sender","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","_users$","ProfileModal","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_Fragment","IconButton","base","icon","ViewIcon","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","flexDir","alignItems","Image","boxSize","src","alt","md","ModalFooter","ScrollableChat","ScrollableFeed","map","display","Tooltip","label","placement","hasArrow","Avatar","mt","mr","cursor","backgroundColor","marginLeft","padding","maxWidth","content","UserBadgeItem","handleFunction","admin","Badge","px","py","CloseIcon","pl","UserListItem","props","userData","_hover","background","color","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","_ChatState","handleSearch","_ref2","query","_yield$axios$get","Authorization","token","get","_x","handleRename","_ref3","_callee2","_yield$axios$put","_context2","put","chatId","chatName","handleAddUser","_ref4","_callee3","user1","_yield$axios$put2","_context3","find","u","groupAdmin","_x2","handleRemove","_ref5","_callee4","_yield$axios$put3","_context4","_x3","flexWrap","pb","ml","Spinner","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","event","key","_toConsumableArray","io","on","newMessageRecieved","chat","ArrowBackIcon","isGroupChat","toUpperCase","overflowY","alignSelf","margin","className","onKeyDown","Lottie","options","marginBottom","lastTypingTime","Date","getTime","setTimeout","Chatbox","ChatLoading","Stack","Skeleton","height","GroupChatModal","selectedUsers","setSelectedUsers","handleSubmit","delUser","filter","sel","slice","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","AddIcon","latestMessage","substring","SideDrawer","loadingChat","setLoadingChat","accessChat","c","Menu","MenuButton","NotificationBadge","count","effect","Effect","SCALE","BellIcon","MenuList","notif","MenuItem","n","as","ChevronDownIcon","MenuDivider","removeItem","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","DrawerBody","Chatpage","styles","container","border","boxShadow","textAlign","heading","input","button","transition","outline","VerifyOTP","useParams","otp","setOtp","sendOtp","success","required","App","Route","path","component","exact","VerificationPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","ChakraProvider","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.8e5eba47.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState();\n  const [notification, setNotification] = useState([]);\n  const [chats, setChats] = useState();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo);\n\n    if (!userInfo) history.push(\"/\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [history]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        selectedChat,\n        setSelectedChat,\n        user,\n        setUser,\n        notification,\n        setNotification,\n        chats,\n        setChats,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\n\nconst Login = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n  const { setUser } = ChatState();\n\n  const submitHandler = async () => {\n    setLoading(true);\n    if (!email || !password) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/user/login\",\n        { email, password },\n        config\n      );\n\n      toast({\n        title: \"Login Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setUser(data);\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setLoading(false);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <VStack spacing=\"10px\">\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          value={email}\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter password\"\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={loading}\n      >\n        Login\n      </Button>\n      <Button\n        variant=\"solid\"\n        colorScheme=\"red\"\n        width=\"100%\"\n        onClick={() => {\n          setEmail(\"guest@example.com\");\n          setPassword(\"123456\");\n        }}\n      >\n        Get Guest User Credentials\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Login;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst Signup = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const history = useHistory();\n\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [confirmpassword, setConfirmpassword] = useState();\n  const [password, setPassword] = useState();\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n\n  const submitHandler = async () => {\n    setPicLoading(true);\n    if (!name || !email || !password || !confirmpassword) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n    if (!email.includes(\"@nitt.edu\")) {\n      toast({\n        title: \"Please Enter a valid NITT Email Address\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n    if (password !== confirmpassword) {\n      toast({\n        title: \"Passwords Do Not Match\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(name, email, password, pic);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\n        \"/api/user\",\n        {\n          name,\n          email,\n          password,\n          pic,\n        },\n        config\n      );\n      // console.log(data);\n      toast({\n        title: \"Registration Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setPicLoading(false);\n      history.push(`/verification/${data._id}`);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n    }\n  };\n\n  const postDetails = (pics) => {\n    setPicLoading(true);\n    if (pics === undefined) {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(pics);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"chat-app\");\n      data.append(\"cloud_name\", \"dqhqtfbim\");\n      fetch(\"https://api.cloudinary.com/v1_1/dqhqtfbim/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(data.url.toString());\n          setPicLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setPicLoading(false);\n        });\n    } else {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  return (\n    <VStack spacing=\"5px\">\n      <FormControl id=\"first-name\" isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input\n          placeholder=\"Enter Your Name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter Password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Confirm Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Confirm password\"\n            onChange={(e) => setConfirmpassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"pic\">\n        <FormLabel>Upload your Picture</FormLabel>\n        <Input\n          type=\"file\"\n          p={1.5}\n          accept=\"image/*\"\n          onChange={(e) => postDetails(e.target.files[0])}\n        />\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={picLoading}\n      >\n        Sign Up\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Signup;\n","import {\n  Box,\n  Container,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Login from \"../components/Authentication/Login\";\nimport Signup from \"../components/Authentication/Signup\";\n\nfunction Homepage() {\n  const history = useHistory();\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n    if (user) history.push(\"/chats\");\n  }, [history]);\n\n  return (\n    <Container maxW=\"xl\" centerContent>\n      <Box\n        d=\"flex\"\n        justifyContent=\"center\"\n        p={3}\n        bg=\"white\"\n        w=\"100%\"\n        m=\"40px 0 15px 0\"\n        borderRadius=\"lg\"\n        borderWidth=\"1px\"\n      >\n        <Text fontSize=\"4xl\" fontFamily=\"Work sans\">\n        NITTConnect\n        </Text>\n      </Box>\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\n        <Tabs isFitted variant=\"soft-rounded\">\n          <TabList mb=\"1em\">\n            <Tab>Login</Tab>\n            <Tab>Sign Up</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>\n              <Login />\n            </TabPanel>\n            <TabPanel>\n              <Signup />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Homepage;\n","import { FormControl } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../animations/typing.json\";\n\nimport io from \"socket.io-client\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\nconst ENDPOINT = \"http://localhost:5000\"; // \"https://talk-a-tive.herokuapp.com\"; -> After deployment\nvar socket, selectedChatCompare;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `/api/message/${selectedChat._id}`,\n        config\n      );\n      setMessages(data);\n      setLoading(false);\n\n      socket.emit(\"join chat\", selectedChat._id);\n      console.log(selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  const sendMessage = async (event) => {\n    if (event.key === \"Enter\" && newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: newMessage,\n            chatId: selectedChat,\n          },\n          config\n        );\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n\n    selectedChatCompare = selectedChat;\n    // eslint-disable-next-line\n  }, [selectedChat]);\n\n  useEffect(() => {\n    socket.on(\"message recieved\", (newMessageRecieved) => {\n      if (\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\n        selectedChatCompare._id !== newMessageRecieved.chat._id\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Text\n            fontSize={{ base: \"28px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          >\n            <IconButton\n              d={{ base: \"flex\", md: \"none\" }}\n              icon={<ArrowBackIcon />}\n              onClick={() => setSelectedChat(\"\")}\n            />\n            {messages &&\n              (!selectedChat.isGroupChat ? (\n                <>\n                  {getSender(user, selectedChat.users)}\n                  <ProfileModal\n                    user={getSenderFull(user, selectedChat.users)}\n                  />\n                </>\n              ) : (\n                <>\n                  {selectedChat.chatName.toUpperCase()}\n                  <UpdateGroupChatModal\n                    fetchMessages={fetchMessages}\n                    fetchAgain={fetchAgain}\n                    setFetchAgain={setFetchAgain}\n                  />\n                </>\n              ))}\n          </Text>\n          <Box\n            d=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            p={3}\n            bg=\"#E8E8E8\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"lg\"\n            overflowY=\"hidden\"\n          >\n            {loading ? (\n              <Spinner\n                size=\"xl\"\n                w={20}\n                h={20}\n                alignSelf=\"center\"\n                margin=\"auto\"\n              />\n            ) : (\n              <div className=\"messages\">\n                <ScrollableChat messages={messages} />\n              </div>\n            )}\n\n            <FormControl\n              onKeyDown={sendMessage}\n              id=\"first-name\"\n              isRequired\n              mt={3}\n            >\n              {istyping ? (\n                <div>\n                  <Lottie\n                    options={defaultOptions}\n                    // height={50}\n                    width={70}\n                    style={{ marginBottom: 15, marginLeft: 0 }}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n              <Input\n                variant=\"filled\"\n                bg=\"#E0E0E0\"\n                placeholder=\"Enter a message..\"\n                value={newMessage}\n                onChange={typingHandler}\n              />\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        // to get socket.io on same page\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n","export const isSameSenderMargin = (messages, m, i, userId) => {\n  // console.log(i === messages.length - 1);\n\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender._id === m.sender._id &&\n    messages[i].sender._id !== userId\n  )\n    return 33;\n  else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender._id !== m.sender._id &&\n      messages[i].sender._id !== userId) ||\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\n  )\n    return 0;\n  else return \"auto\";\n};\n\nexport const isSameSender = (messages, m, i, userId) => {\n  return (\n    i < messages.length - 1 &&\n    (messages[i + 1].sender._id !== m.sender._id ||\n      messages[i + 1].sender._id === undefined) &&\n    messages[i].sender._id !== userId\n  );\n};\n\nexport const isLastMessage = (messages, i, userId) => {\n  return (\n    i === messages.length - 1 &&\n    messages[messages.length - 1].sender._id !== userId &&\n    messages[messages.length - 1].sender._id\n  );\n};\n\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\n};\n\nexport const getSender = (loggedUser, users) => {\n  return users[0]?._id === loggedUser?._id ? users[1].name : users[0].name;\n};\n\nexport const getSenderFull = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\n};\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  IconButton,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\n\nconst ProfileModal = ({ user, children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      {children ? (\n        <span onClick={onOpen}>{children}</span>\n      ) : (\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n      )}\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent h=\"410px\">\n          <ModalHeader\n            fontSize=\"40px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {user.name}\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody\n            d=\"flex\"\n            flexDir=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Image\n              borderRadius=\"full\"\n              boxSize=\"150px\"\n              src={user.pic}\n              alt={user.name}\n            />\n            <Text\n              fontSize={{ base: \"28px\", md: \"30px\" }}\n              fontFamily=\"Work sans\"\n            >\n              Email: {user.email}\n            </Text>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onClose}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileModal;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((m, i) => (\n          <div style={{ display: \"flex\" }} key={m._id}>\n            {(isSameSender(messages, m, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\n                <Avatar\n                  mt=\"7px\"\n                  mr={1}\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={m.sender.name}\n                  src={m.sender.pic}\n                />\n              </Tooltip>\n            )}\n            <span\n              style={{\n                backgroundColor: `${\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\n                }`,\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n                borderRadius: \"20px\",\n                padding: \"5px 15px\",\n                maxWidth: \"75%\",\n              }}\n            >\n              {m.content}\n            </span>\n          </div>\n        ))}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n","import { CloseIcon } from \"@chakra-ui/icons\";\nimport { Badge } from \"@chakra-ui/layout\";\n\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\n  return (\n    <Badge\n      px={2}\n      py={1}\n      borderRadius=\"lg\"\n      m={1}\n      mb={2}\n      variant=\"solid\"\n      fontSize={12}\n      colorScheme=\"purple\"\n      cursor=\"pointer\"\n      onClick={handleFunction}\n    >\n      {user.name}\n      {admin === user._id && <span> (Admin)</span>}\n      <CloseIcon pl={1} />\n    </Badge>\n  );\n};\n\nexport default UserBadgeItem;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\n//import { ChatState } from \"../../Context/ChatProvider\";\n\nconst UserListItem = (props) => {\n // const { user } = ChatState();\n  const { user: userData, handleFunction } = props;\n\n  return (\n    <Box\n      onClick={handleFunction}\n      cursor=\"pointer\"\n      bg=\"#E8E8E8\"\n      _hover={{\n        background: \"#38B2AC\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      mb={2}\n      borderRadius=\"lg\"\n    >\n      <Avatar\n        mr={2}\n        size=\"sm\"\n        cursor=\"pointer\"\n        name={userData.name}\n        src={userData.pic}\n      />\n      <Box>\n        <Text>{userData.name}</Text>\n        <Text fontSize=\"xs\">\n          <b>Email : </b>\n          {userData.email}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserListItem;","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n  IconButton,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameloading, setRenameLoading] = useState(false);\n  const toast = useToast();\n\n  const { selectedChat, setSelectedChat, user } = ChatState();\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/rename`,\n        {\n          chatId: selectedChat._id,\n          chatName: groupChatName,\n        },\n        config\n      );\n\n      console.log(data._id);\n      // setSelectedChat(\"\");\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setRenameLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleAddUser = async (user1) => {\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\n      toast({\n        title: \"User Already in group!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (selectedChat.groupAdmin._id !== user._id) {\n      toast({\n        title: \"Only admins can add someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupadd`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleRemove = async (user1) => {\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupremove`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      fetchMessages();\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  return (\n    <>\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {selectedChat.chatName}\n          </ModalHeader>\n\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\n              {selectedChat.users.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  admin={selectedChat.groupAdmin}\n                  handleFunction={() => handleRemove(u)}\n                />\n              ))}\n            </Box>\n            <FormControl d=\"flex\">\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                value={groupChatName}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n              <Button\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                ml={1}\n                isLoading={renameloading}\n                onClick={handleRename}\n              >\n                Update\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add User to group\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n\n            {loading ? (\n              <Spinner size=\"lg\" />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => handleAddUser(user)}\n                />\n              ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\n              Leave Group\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateGroupChatModal;\n","import { Box } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport SingleChat from \"./SingleChat\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\n  const { selectedChat } = ChatState();\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\n      alignItems=\"center\"\n      flexDir=\"column\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"68%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n    </Box>\n  );\n};\n\nexport default Chatbox;\n","import { Stack } from \"@chakra-ui/layout\";\nimport { Skeleton } from \"@chakra-ui/skeleton\";\n\nconst ChatLoading = () => {\n  return (\n    <Stack>\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n    </Stack>\n  );\n};\n\nexport default ChatLoading;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst GroupChatModal = ({ children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const { user, chats, setChats } = ChatState();\n\n  const handleGroup = (userToAdd) => {\n    if (selectedUsers.includes(userToAdd)) {\n      toast({\n        title: \"User already added\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    setSelectedUsers([...selectedUsers, userToAdd]);\n  };\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const handleDelete = (delUser) => {\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\n  };\n\n  const handleSubmit = async () => {\n    if (!groupChatName || !selectedUsers) {\n      toast({\n        title: \"Please fill all the feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(\n        `/api/chat/group`,\n        {\n          name: groupChatName,\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\n        },\n        config\n      );\n      setChats([data, ...chats]);\n      onClose();\n      toast({\n        title: \"New Group Chat Created!\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Failed to Create the Chat!\",\n        description: error.response.data,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <span onClick={onOpen}>{children}</span>\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            Create Group Chat\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <FormControl>\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\n              {selectedUsers.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  handleFunction={() => handleDelete(u)}\n                />\n              ))}\n            </Box>\n            {loading ? (\n              // <ChatLoading />\n              <div>Loading...</div>\n            ) : (\n              searchResult\n                ?.slice(0, 4)\n                .map((user) => (\n                  <UserListItem\n                    key={user._id}\n                    user={user}\n                    handleFunction={() => handleGroup(user)}\n                  />\n                ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\n              Create Chat\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default GroupChatModal;\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender } from \"../config/ChatLogics\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst MyChats = ({ fetchAgain }) => {\n  const [loggedUser, setLoggedUser] = useState();\n\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\n\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    // console.log(user._id);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\"/api/chat\", config);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n    // eslint-disable-next-line\n  }, [fetchAgain]);\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"31%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <Box\n        pb={3}\n        px={3}\n        fontSize={{ base: \"28px\", md: \"30px\" }}\n        fontFamily=\"Work sans\"\n        d=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        My Chats\n        <GroupChatModal>\n          <Button\n            d=\"flex\"\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\n            rightIcon={<AddIcon />}\n          >\n            New Group Chat\n          </Button>\n        </GroupChatModal>\n      </Box>\n      <Box\n        d=\"flex\"\n        flexDir=\"column\"\n        p={3}\n        bg=\"#F8F8F8\"\n        w=\"100%\"\n        h=\"100%\"\n        borderRadius=\"lg\"\n        overflowY=\"hidden\"\n      >\n        {chats ? (\n          <Stack overflowY=\"scroll\">\n            {chats.map((chat) => (\n              <Box\n                onClick={() => setSelectedChat(chat)}\n                cursor=\"pointer\"\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\n                color={selectedChat === chat ? \"white\" : \"black\"}\n                px={3}\n                py={2}\n                borderRadius=\"lg\"\n                key={chat._id}\n              >\n                <Text>\n                  {!chat.isGroupChat\n                    ? getSender(loggedUser, chat.users)\n                    : chat.chatName}\n                </Text>\n                {chat.latestMessage && (\n                  <Text fontSize=\"xs\">\n                    <b>{chat.latestMessage.sender.name} : </b>\n                    {chat.latestMessage.content.length > 50\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\n                      : chat.latestMessage.content}\n                  </Text>\n                )}\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n","import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport ChatLoading from \"../ChatLoading\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport ProfileModal from \"./ProfileModal\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\nimport { getSender } from \"../../config/ChatLogics\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nfunction SideDrawer() {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n\n  const {\n    setSelectedChat,\n    user,\n    notification,\n    setNotification,\n    chats,\n    setChats,\n  } = ChatState();\n\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const history = useHistory();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    history.push(\"/\");\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const accessChat = async (userId) => {\n    console.log(userId);\n\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"white\"\n        w=\"100%\"\n        p=\"5px 10px 5px 10px\"\n        borderWidth=\"5px\"\n      >\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n          <Button variant=\"ghost\" onClick={onOpen}>\n            <i className=\"fas fa-search\"></i>\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\n              Search User\n            </Text>\n          </Button>\n        </Tooltip>\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\n          Talk-A-Tive\n        </Text>\n        <div>\n          <Menu>\n            <MenuButton p={1}>\n              <NotificationBadge\n                count={notification.length}\n                effect={Effect.SCALE}\n              />\n              <BellIcon fontSize=\"2xl\" m={1} />\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setSelectedChat(notif.chat);\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {notif.chat.isGroupChat\n                    ? `New Message in ${notif.chat.chatName}`\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\n              <Avatar\n                size=\"sm\"\n                cursor=\"pointer\"\n                name={user.name}\n                src={user.pic}\n              />\n            </MenuButton>\n            <MenuList>\n              <ProfileModal user={user}>\n                <MenuItem>My Profile</MenuItem>{\" \"}\n              </ProfileModal>\n              <MenuDivider />\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\n            </MenuList>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n          <DrawerBody>\n            <Box d=\"flex\" pb={2}>\n              <Input\n                placeholder=\"Search by name or email\"\n                mr={2}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button onClick={handleSearch}>Go</Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => accessChat(user._id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default SideDrawer;\n","import { Box } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport Chatbox from \"../components/Chatbox\";\nimport MyChats from \"../components/MyChats\";\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatpage = () => {\n  const [fetchAgain, setFetchAgain] = useState(false);\n  const { user } = ChatState();\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {user && <SideDrawer />}\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\n        {user && <MyChats fetchAgain={fetchAgain} />}\n        {user && (\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default Chatpage;\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst VerifyOTP = () => {\r\n    const { id } = useParams();\r\n    const [otp,setOtp]= useState(\"\");\r\n    const toast = useToast();\r\n    const history = useHistory();\r\n   ///console.log(otp);\r\n    const sendOtp = async ()=>{\r\n        try {\r\n            console.log(otp);\r\n            const config = {\r\n                headers: {\r\n                  \"Content-type\": \"application/json\",\r\n                },\r\n              };\r\n              const { data } = await axios.post(\r\n                `/api/user/verification/${id}`,\r\n                {\r\n                  otp\r\n                },\r\n                config\r\n              );\r\n              if(!data.success){\r\n                toast({\r\n                    title: \"Otp is not verify or incorrect \",\r\n                    status: \"warning\",\r\n                    duration: 5000,\r\n                    isClosable: true,\r\n                    position: \"bottom\",\r\n                  });\r\n              }\r\n              else{\r\n                toast({\r\n                    title: \"Otp is verify please login\",\r\n                    status: \"success\",\r\n                    duration: 5000,\r\n                    isClosable: true,\r\n                    position: \"bottom\",\r\n                  });\r\n                  history.push('/');\r\n\r\n              }\r\n        } catch (error) {\r\n           console.log(\"erro while verifying otp\",otp) ;\r\n           toast({\r\n            title: \"Time is over please register again\",\r\n            status: \"error\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n            position: \"bottom\",\r\n          });\r\n\r\n        }\r\n    }\r\n\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2 style={styles.heading}>Enter OTP</h2>\r\n      \r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter OTP\"\r\n          value={otp}\r\n          onChange={(e) => setOtp(e.target.value)}\r\n          style={styles.input}\r\n          required\r\n        />\r\n        <button type=\"button\" onClick={sendOtp} style={styles.button}>Submit</button>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\n// Inline CSS styles\r\nconst styles = {\r\n  container: {\r\n    maxWidth: '400px',\r\n    margin: 'auto',\r\n    padding: '20px',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '5px',\r\n    boxShadow: '0 2px 5px rgba(0, 0, 0, 0.1)',\r\n    textAlign: 'center'\r\n  },\r\n  heading: {\r\n    fontSize: '20px',\r\n    marginBottom: '20px'\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    padding: '10px',\r\n    marginBottom: '10px',\r\n    borderRadius: '5px',\r\n    border: '1px solid #ccc'\r\n  },\r\n  button: {\r\n    width: '100%',\r\n    padding: '10px',\r\n    borderRadius: '5px',\r\n    border: 'none',\r\n    backgroundColor: '#007bff',\r\n    color: '#fff',\r\n    cursor: 'pointer',\r\n    transition: 'background-color 0.3s',\r\n    outline: 'none',\r\n    marginTop: '10px',\r\n    ':hover': {\r\n      backgroundColor: '#0056b3'\r\n    }\r\n  }\r\n};\r\n\r\nexport default VerifyOTP;\r\n","import \"./App.css\";\nimport Homepage from \"./Pages/Homepage\";\nimport { Route } from \"react-router-dom\";\nimport Chatpage from \"./Pages/Chatpage\";\nimport VerificationPage from './components/Authentication/VerificationPage'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route path=\"/\" component={Homepage} exact />\n      <Route path=\"/chats\" component={Chatpage} />\n      <Route path=\"/verification/:id\" component={VerificationPage} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport ChatProvider from \"./Context/ChatProvider\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <ChakraProvider>\n    <BrowserRouter>\n      <ChatProvider>\n        <App />\n      </ChatProvider>\n    </BrowserRouter>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}